import numpy as np

teTempMult = 1.3

eVToJ = 1.602176634e-19 # In STELLOPT, temperatures are written in eV but pressures are written in Pa

AM_AUX_F = '1.2512236570e+06     9.4097836350e+05     8.1115297618e+05     7.1324321463e+05    6.3250198348e+05     5.6305064566e+05     5.0227962477e+05     4.4763715437e+05    3.9698997860e+05     3.4924091490e+05     3.0387023050e+05     2.6069582763e+05    2.1423145042e+05     1.6642501337e+05     1.2640965835e+05     9.2271137715e+04    6.3659999422e+04     4.0308707737e+04     2.2012538398e+04     8.6155327335e+03    7.8555715050e-13'
NE_AUX_F = '2.0000000000E+20     1.9372825291E+20     1.8962096535E+20     1.8607311862E+20     1.8289405426E+20     1.8000000000E+20     1.7751525558E+20     1.7520396313E+20     1.7264925235E+20     1.6958492505E+20     1.6583411868E+20     1.6127608817E+20     1.5192104794E+20     1.3728327787E+20     1.2370373869E+20     1.1008761610E+20     9.6385033329E+19     8.2555451060E+19     6.8565624832E+19     5.4388087087E+19     4.0000000000E+19'
TE_AUX_F = '2.0000000000E+04     1.5527864045E+04     1.3675444680E+04     1.2254033308E+04     1.1055728090E+04     1.0000000000E+04     9.0455488499E+03     8.1678404338E+03     7.3508893593E+03     6.5835921350E+03     5.8578643763E+03     5.1676030258E+03     4.5080666152E+03     3.8754845034E+03     3.2667994693E+03     2.6794919243E+03     2.1114561800E+03     1.5609110854E+03     1.0263340390E+03     5.0641131038E+02     0.0000000000E+00'
NI_AUX_F1 = '9.0476190476e+19     8.7638971555e+19     8.5780912896e+19     8.4175934614e+19     8.2737786451e+19     8.1428571429e+19     8.0304520381e+19     7.9258935702e+19     7.8103233206e+19     7.6716989904e+19     7.5020196546e+19     7.2958230363e+19     6.8726188354e+19     6.2104339989e+19     5.5961215122e+19     4.9801540617e+19     4.3602753173e+19     3.7346513575e+19     3.1017782662e+19     2.4604134635e+19     1.8095238095e+19'
NI_AUX_F2 = '9.0476190476e+19     8.7638971555e+19     8.5780912896e+19     8.4175934614e+19     8.2737786451e+19     8.1428571429e+19     8.0304520381e+19     7.9258935702e+19     7.8103233206e+19     7.6716989904e+19     7.5020196546e+19     7.2958230363e+19     6.8726188354e+19     6.2104339989e+19     5.5961215122e+19     4.9801540617e+19     4.3602753173e+19     3.7346513575e+19     3.1017782662e+19     2.4604134635e+19     1.8095238095e+19'
NI_AUX_F3 = '9.5238095238e+18     9.2251549005e+18     9.0295697786e+18     8.8606246962e+18     8.7092406790e+18     8.5714285714e+18     8.4531074086e+18     8.3430458633e+18     8.2213929690e+18     8.0754726214e+18     7.8968627943e+18     7.6798137224e+18     7.2343356162e+18     6.5372989462e+18     5.8906542233e+18     5.2422674333e+18     4.5897634919e+18     3.9312119552e+18     3.2650297539e+18     2.5899089089e+18     1.9047619048e+18'

# Handy function
def cleanup(ar, integer=False):
    if integer:
        precision = 0
        ar = ar.astype(int)
    else:
        precision = 10
    newstr = np.array2string(ar, separator='     ', precision=precision, max_line_width=np.inf).replace('[','').replace(']','')
    return newstr

# Processing
p = np.fromstring(AM_AUX_F, sep=' ')
ne = np.fromstring(NE_AUX_F, sep=' ')
te = np.fromstring(TE_AUX_F, sep=' ')
ni1 = np.fromstring(NI_AUX_F1, sep=' ')
ni2 = np.fromstring(NI_AUX_F2, sep=' ')
ni3 = np.fromstring(NI_AUX_F3, sep=' ')

newTe = teTempMult * te

newTi = (p / eVToJ - ne * newTe) / (ni1 + ni2 + ni3)

print('  TE_AUX_F =', cleanup(newTe))
print('  TI_AUX_F =', cleanup(newTi))
